---

- name: Install prerequisites
  hosts: localhost
  gather_facts: no
  tasks:
    - apt:
        name:
          - PyVmomi
      become: yes

- name: Provision nodes
  hosts: k8s
  gather_facts: no
  vars_files:
    - vars/vsphere/vars.yml
    - vars/vsphere/vault.yml
  tasks:
    - name: Creating new VMs
      vmware_guest:
        hostname: "{{ vsphere.hostname }}"
        username: "{{ vsphere.username }}"
        password: "{{ vsphere.password }}"
        validate_certs: no
        datacenter: "{{ vsphere.datacenter }}"
        cluster: "{{ vsphere.cluster }}"
        folder: "{{ vsphere.folder }}"
        resource_pool: "{{ vsphere.resource_pool }}"
        name: "{{ inventory_hostname }}"
        state: poweredon
        template: "{{ vsphere.template }}"
        guest_id: ubuntu64Guest
        networks:
          - name: "{{ vsphere.network }}"
            start_connected: true
        wait_for_ip_address: true
        customization:
          domain: "{{ vsphere.domain }}"
          dns_suffix:
            - "{{ vsphere.domain }}"
      delegate_to: localhost
    - name: Collecting data about existing VMs
      vmware_guest_facts:
        hostname: "{{ vsphere.hostname }}"
        username: "{{ vsphere.username }}"
        password: "{{ vsphere.password }}"
        validate_certs: no
        datacenter: "{{ vsphere.datacenter }}"
        folder: "{{ vsphere.folder }}"
        name: "{{ inventory_hostname }}"
      delegate_to: localhost
      register: node
    - name: Storing connection data
      set_fact:
        ansible_host: "{{ node.instance.hw_eth0.ipaddresses.0 }}"
      delegate_to: localhost
  tags:
    - provision

- name: Create SSH config
  hosts: k8s
  gather_facts: no
  tasks:
    - copy:
        content: |
          # config for {{ inventory_hostname }}
          Host {{ inventory_hostname }}
              HostName {{ ansible_host }}
              User {{ ansible_user }}
              IdentityFile {{ ansible_ssh_private_key_file }}
              StrictHostKeyChecking no
              UserKnownHostsFile /dev/null
        dest: "~/.ssh/config.d/vsphere_{{ inventory_hostname }}"
        mode: "0640"
      delegate_to: localhost
  tags:
    - provision

- name: Prepare nodes for Ansible
  hosts: k8s
  gather_facts: no
  tasks:
    - name: Wait for SSH to be available
      wait_for:
        host: "{{ ansible_host }}"
        port: 22
        connect_timeout: 5
        timeout: 120
      delegate_to: localhost
    - name: Install updates
      raw: "apt-get update && apt-get -y upgrade"
      become: yes
    - name: Install Python
      raw: "apt-get -y install python-pip"
      become: yes
  tags:
    - provision
