---

- name: Prepare nodes
  hosts: k8s
  vars_files:
    - vars/global.yml
  roles:
    - role: volume-docker
      when: 'runtime == "docker" and provisioning.use_volumes'
    - role: docker
      when: 'runtime == "docker"'
    - role: containerd
      when: 'runtime == "containerd"'
    - role: k8s-node-prepare
    - role: k8s-cri-containerd
      when: 'runtime == "containerd"'

- name: Prepare DNS
  hosts: first_controller
  vars_files:
    - vars/global.yml
    - vars/cloudflare/vars.yml
    - vars/cloudflare/vault.yml
  tasks:
    - name: Clear DNS records for load balancer
      cloudflare_dns:
        zone: "{{ dns.zone }}"
        record: "{{ dns.record }}"
        type: A
        state: absent
        account_email: "{{ cloudflare.email }}"
        account_api_token: "{{ cloudflare.token }}"
    - name: Create DNS record for first node
      cloudflare_dns:
        zone: "{{ dns.zone }}"
        record: "{{ dns.record }}"
        type: A
        value: "{{ ansible_default_ipv4.address }}"
        account_email: "{{ cloudflare.email }}"
        account_api_token: "{{ cloudflare.token }}"

- name: Initialize cluster
  hosts: first_controller
  vars_files:
    - vars/global.yml
  roles:
    - role: k8s-cluster-init
    - role: k8s-cni-weave

- name: Deploy additional masters
  hosts: additional_controllers
  serial: 1
  vars_files:
    - vars/global.yml
    - vars/cloudflare/vars.yml
    - vars/cloudflare/vault.yml
  vars:
    first_controller: "{{ groups['first_controller'][0] }}"
  roles:
    - role: k8s-controller-join
  tasks:
    - name: Add DNS record for load balancer
      cloudflare_dns:
        zone: "{{ dns.zone }}"
        record: "{{ dns.record }}"
        type: A
        value: "{{ ansible_default_ipv4.address }}"
        account_email: "{{ cloudflare.email }}"
        account_api_token: "{{ cloudflare.token }}"

- name: Configure control planes
  hosts: controller
  roles:
    - role: k8s-controller-finish
    - role: k8s-controller-all-nodeports

- name: Deploy workers
  hosts: worker
  vars_files:
    - vars/global.yml
  vars:
    controller: "{{ groups['first_controller'][0] }}"
  roles:
    - role: k8s-worker-join
